@model Piranha.Areas.Manager.Models.MediaListModel
@using Piranha.Models
@{
    ViewBag.Title = "Media";
    ViewBag.Subtitle = "";
    ViewBag.Controller = "Media";

    foreach (var item in Model.Breadcrumb) {
        ViewBag.Subtitle += $"<small>/ <a href=\"{Url.Action("List", new { folderId = item.Id })}\">{@item.Name}</a></small>";
    }
}

@section script {
    <script>
        Dropzone.autoDiscover = false;
        $(document).ready(function () {
            $("#dropzone").dropzone({
                paramName: 'Uploads',
                url: '@Url.Action("Add")',
                uploadMultiple: true,
                init: function () {
                    this.on("queuecomplete", function(file) {
                        location.reload();
                    });
                }
            });
        });

        function allowDrop (e) {
            e.preventDefault();

            var target = $(e.target);

            var targetId = target.attr('data-id');
            if (!targetId)
                target = target.closest('tr');

            if (!target.hasClass('dropping'))
                target.addClass('dropping');
        }

        function dropLeave (e) {
            e.preventDefault();

            var target = $(e.target);

            var targetId = target.attr('data-id');
            if (!targetId)
                target = target.closest('tr');
            target.removeClass('dropping');
        }

        function drag (e) {
            e.dataTransfer.setData("text", $(e.target).attr('data-id'));
        }

        function drop (e) {
            e.preventDefault();
            var data = e.dataTransfer.getData("text");
            var targetId = $(e.target).attr('data-id');
            if (!targetId)
                targetId = $(e.target).closest('tr').attr('data-id');

            $('#mediaId').val(e.dataTransfer.getData("text"));
            $('#targetId').val(targetId);
            $('#move-form').submit();
        }
    </script>
}

@using (var form = Html.BeginForm("Move", "Media", FormMethod.Post, new { id="move-form", @class = "form", role = "form", style = "margin-top:0" })) {
    <input type="hidden" id="mediaId" name="mediaId" value="">
    <input type="hidden" id="folderId" name="folderId" value="@Model.CurrentFolderId">
    <input type="hidden" id="targetId" name="targetId" value="">
}

<div class="top"><div class="top-nav">
    <nav>
        <ul class="navbar-nav">
            <li>
                <div class="btn-group" role="group">
                    <button id="btnAdd" class="btn btn-sm btn-labeled btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-plus"></i>Add
                    </button>
                    <div class="dropdown-menu" aria-labelledby="btnAdd">
                        <a class="dropdown-item btn-panel-region" href="#" data-toggle="modal" data-target="#modalAddFolder">New folder</a>
                        <a class="dropdown-item btn-panel-region" href="#" data-toggle="modal" data-target="#modalAddMedia">New upload</a>
                    </div>
                </div>
            </li>
        </ul>
    </nav>
</div>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">Content</li>
        <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
    </ol>
</nav></div>

@if (!string.IsNullOrWhiteSpace(ViewBag.Message)) {
    <div class="row">
        <div class="col-sm-12">
            <div class="@ViewBag.MessageCss">
                @Html.Raw(ViewBag.Message)
            </div>
        </div>
    </div>
}

<form action="@Url.Action("Add")" class="dropzone needsclick dz-clickable" id="dropzone" enctype="multipart/form-data">
    @Html.Hidden("ParentId", Model.CurrentFolderId)

    <div class="dz-message needsclick">
        <i class="fas fa-cloud-upload-alt"></i>
        Drop files here or click to upload.
    </div>
</form>

<div class="row">
    <div class="col-sm-12">
        <div class="table-filter" data-table="#media-table">
            <div class="form-group">
                <input id="media-search" type="text" class="form-control input-block search-field" placeholder="Search for a media file in the current folder">
            </div>
        </div>
        <table id="media-table" class="table table-main table-media">
            <thead>
                <tr>
                    <th class="handle">Name</th>
                    <th class="medium">Type</th>
                    <th class="medium">Size</th>
                    <th class="date">Modified</th>
                    <th clsas="actions one"></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.CurrentFolderId.HasValue) {
                    <tr ondrop="drop(event)" ondragover="allowDrop(event)" ondragleave="dropLeave(event)" data-id="@Model.ParentFolderId">
                        <td class="text-limit-cell">
                            <a href="@Url.Action("List", new { folderId = Model.ParentFolderId })">
                                <i class="fas fa-folder-open media-icon"></i>
                                ...
                            </a>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td class="actions one"></td>
                    </tr>
                }
                @foreach (var folder in Model.Folders) {
                    var filesInFolder = Model.FilesInFolder[folder.Id];

                    <tr ondrop="drop(event)" ondragover="allowDrop(event)" ondragleave="dropLeave(event)" data-id="@folder.Id">
                        <td class="text-limit-cell">
                            <a href="@Url.Action("List", new { folderId = folder.Id})">
                                <i class="fas fa-folder-open media-icon"></i>
                                @folder.Name
                            </a>
                        </td>
                        <td></td>
                        <td>@filesInFolder @(filesInFolder == 1 ? "item" : "items")</td>
                        <td>@folder.Created.ToString("yyyy-MM-dd")</td>
                        <td class="actions one">
                            @if (filesInFolder == 0)
                            {
                                <a class="remove confirm-delete" href="@Url.Action("DeleteFolder", new { id = folder.Id})" data-toggle="tooltip" data-original-title="Delete folder" data-placement="top" data-message="Are you sure you want to delete the media folder?">
                                    <i class="fas fa-trash text-danger"></i>
                                </a>
                            }
                        </td>
                    </tr>
                }
                @foreach (var item in Model.Media) {
                    <tr data-id="@item.Id" draggable="true" ondragstart="drag(event)">
                        <td class="text-limit-cell">
                            <div class="dd-handle">
                                    <span class="fas fa-ellipsis-v"></span>
                            </div>
                            <a href="#" target="_blank" data-toggle="modal" data-target="#modalImgPreview" data-filename="@item.Filename" data-url="@Url.Content(item.PublicUrl)" data-contenttype="@item.ContentType" data-filesize="@Piranha.Utils.FormatByteSize(item.Size)" data-modified="@item.LastModified.ToString("yyyy-MM-dd")" data-id="@item.Id" data-parentid="@item.FolderId">
                                @if (item.Type == MediaType.Image) {
                                    <i class="fas fa-image media-icon"></i>
                                } else if (item.Type == MediaType.Video) {
                                    <i class="fas fa-film media-icon"></i>
                                } else if (item.Type == MediaType.Document) {
                                    <i class="fas fa-book media-icon"></i>
                                } else {
                                    <i class="fas fa-exclamation-triangle media-icon"></i>
                                }
                                @item.Filename
                            </a>
                        </td>
                        <td>@item.ContentType</td>
                        <td>@Piranha.Utils.FormatByteSize(item.Size)</td>
                        <td>@item.LastModified.ToString("yyyy-MM-dd")</td>
                        <td class="actions one">
                            <a class="remove confirm-delete" href="@Url.Action("Delete", new { id = item.Id})" data-toggle="tooltip" data-original-title="Delete" data-placement="top" data-message="Are you sure you want to delete the media asset?">
                                <i class="fas fa-trash text-danger"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<partial name="Partial/_MediaModal" />
<partial name="Partial/_FolderModal" />
